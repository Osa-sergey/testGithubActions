buildscript {
    ext.versions = [
            kotlin: "1.3.72",
            versionName: "0.1.0",
            core: "1.3.1",
            appcompat: "1.2.0",
            constraintLayout: "1.1.3",
            junit: "5.6.2",
            mockito: "3.4.6", // в случае использования powermock использовать 2.28.2
            mockitoKotlin: "2.2.0",
 //           powermock: "2.0.7",
 //           powermockJunit5: "1.6.4"
            hamcrest: "2.2"

    ]

    ext.jupiter = [
            api: "org.junit.jupiter:junit-jupiter-api:$versions.junit",
            engine: "org.junit.jupiter:junit-jupiter-engine:$versions.junit",
            params: "org.junit.jupiter:junit-jupiter-params:$versions.junit"
    ]

    ext.mockito = [
            core: "org.mockito:mockito-core:$versions.mockito",
            jupiter: "org.mockito:mockito-junit-jupiter:$versions.mockito",
            android: "org.mockito:mockito-android:$versions.mockito"
    ]

    ext.mockitoKotlin = [
            kotlin: "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin"
    ]

/**    ext.powerMockito  = [
            junit5: "org.powermock:powermock-module-junit5:$versions.powermockJunit5",
            mockito2: "org.powermock:powermock-api-mockito2:$versions.powermock"
    ]
**/

    ext.hamcrest = [
            hamcrest: "org.hamcrest:hamcrest:$versions.hamcrest"
    ]

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.6.1.0"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}